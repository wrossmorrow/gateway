# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from gateway.log.v1 import log_pb2 as gateway_dot_log_dot_v1_dot_log__pb2


class RequestResponseLogServiceStub(object):
    """RequestResponseLogService records and manages API logs for brands
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SaveLog = channel.unary_unary(
                '/gateway.log.v1.RequestResponseLogService/SaveLog',
                request_serializer=gateway_dot_log_dot_v1_dot_log__pb2.SaveLogRequest.SerializeToString,
                response_deserializer=gateway_dot_log_dot_v1_dot_log__pb2.SaveLogResponse.FromString,
                )
        self.PublishLog = channel.unary_unary(
                '/gateway.log.v1.RequestResponseLogService/PublishLog',
                request_serializer=gateway_dot_log_dot_v1_dot_log__pb2.PublishLogRequest.SerializeToString,
                response_deserializer=gateway_dot_log_dot_v1_dot_log__pb2.PublishLogResponse.FromString,
                )
        self.GetLogs = channel.unary_unary(
                '/gateway.log.v1.RequestResponseLogService/GetLogs',
                request_serializer=gateway_dot_log_dot_v1_dot_log__pb2.GetLogsRequest.SerializeToString,
                response_deserializer=gateway_dot_log_dot_v1_dot_log__pb2.GetLogsResponse.FromString,
                )
        self.GetFieldValues = channel.unary_unary(
                '/gateway.log.v1.RequestResponseLogService/GetFieldValues',
                request_serializer=gateway_dot_log_dot_v1_dot_log__pb2.GetFieldValuesRequest.SerializeToString,
                response_deserializer=gateway_dot_log_dot_v1_dot_log__pb2.GetFieldValuesResponse.FromString,
                )


class RequestResponseLogServiceServicer(object):
    """RequestResponseLogService records and manages API logs for brands
    """

    def SaveLog(self, request, context):
        """SaveLog records an API call that was made
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishLog(self, request, context):
        """PublishLog sends an API call record to kafka
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLogs(self, request, context):
        """GetLogs finds API calls matching the criteria in the GetLogsRequest
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFieldValues(self, request, context):
        """Get all possible values for requested field
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RequestResponseLogServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SaveLog': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveLog,
                    request_deserializer=gateway_dot_log_dot_v1_dot_log__pb2.SaveLogRequest.FromString,
                    response_serializer=gateway_dot_log_dot_v1_dot_log__pb2.SaveLogResponse.SerializeToString,
            ),
            'PublishLog': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishLog,
                    request_deserializer=gateway_dot_log_dot_v1_dot_log__pb2.PublishLogRequest.FromString,
                    response_serializer=gateway_dot_log_dot_v1_dot_log__pb2.PublishLogResponse.SerializeToString,
            ),
            'GetLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLogs,
                    request_deserializer=gateway_dot_log_dot_v1_dot_log__pb2.GetLogsRequest.FromString,
                    response_serializer=gateway_dot_log_dot_v1_dot_log__pb2.GetLogsResponse.SerializeToString,
            ),
            'GetFieldValues': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFieldValues,
                    request_deserializer=gateway_dot_log_dot_v1_dot_log__pb2.GetFieldValuesRequest.FromString,
                    response_serializer=gateway_dot_log_dot_v1_dot_log__pb2.GetFieldValuesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gateway.log.v1.RequestResponseLogService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RequestResponseLogService(object):
    """RequestResponseLogService records and manages API logs for brands
    """

    @staticmethod
    def SaveLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gateway.log.v1.RequestResponseLogService/SaveLog',
            gateway_dot_log_dot_v1_dot_log__pb2.SaveLogRequest.SerializeToString,
            gateway_dot_log_dot_v1_dot_log__pb2.SaveLogResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gateway.log.v1.RequestResponseLogService/PublishLog',
            gateway_dot_log_dot_v1_dot_log__pb2.PublishLogRequest.SerializeToString,
            gateway_dot_log_dot_v1_dot_log__pb2.PublishLogResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gateway.log.v1.RequestResponseLogService/GetLogs',
            gateway_dot_log_dot_v1_dot_log__pb2.GetLogsRequest.SerializeToString,
            gateway_dot_log_dot_v1_dot_log__pb2.GetLogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFieldValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gateway.log.v1.RequestResponseLogService/GetFieldValues',
            gateway_dot_log_dot_v1_dot_log__pb2.GetFieldValuesRequest.SerializeToString,
            gateway_dot_log_dot_v1_dot_log__pb2.GetFieldValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
