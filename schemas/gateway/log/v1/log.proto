syntax = "proto3";

package gateway.log.v1;
option go_package = "github.com/wrossmorrow/gateway.log.v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/api/annotations.proto";

import "validate/validate.proto";

// RequestResponseLogService records and manages API logs for brands
service RequestResponseLogService {

  // SaveLog records an API call that was made
  rpc SaveLog(SaveLogRequest) returns (SaveLogResponse) {}

  // PublishLog sends an API call record to kafka
  rpc PublishLog(PublishLogRequest) returns (PublishLogResponse) {}

  // GetLogs finds API calls matching the criteria in the GetLogsRequest
  rpc GetLogs(GetLogsRequest) returns (GetLogsResponse) {
    option (google.api.http) = {
      post: "/api/v0.1/logs/query"
      body: "*"
    };
  }

  // Get all possible values for requested field
  rpc GetFieldValues(GetFieldValuesRequest) returns (GetFieldValuesResponse) {
    option (google.api.http) = {
      post: "/api/v0.1/logs/query/fields"
      body: "*"
    };
  }

}

message SaveLogRequest {
  Log log = 1;
}

message SaveLogResponse {
  string log_id = 1 [(validate.rules).string = {uuid: true}];
  // bond.api.v1.ErrorResponse error = 2;
}


message PublishLogRequest {
  Log log = 1;
}

message PublishLogResponse {
  // bond.api.v1.ErrorResponse error = 1;
}


// GetLogsRequest is the API request to get logs matching the criteria
message GetLogsRequest {
  string tenant = 1 [(validate.rules).string = {uuid: true, ignore_empty: true}];
  repeated LogsFilter filters = 2;
  // bond.api.v1.PageInfo page_info = 3;
}

message GetLogsResponse {
  repeated Log results = 1;
  int32 total_result_count = 2;
  // bond.api.v1.ErrorResponse error = 3;
}


message GetFieldValuesRequest {
  string field = 1;
  string brand_id = 2 [(validate.rules).string = {uuid: true, ignore_empty: true}];
}

message GetFieldValuesResponse {
  repeated string result = 1;
  // bond.api.v1.ErrorResponse error = 2;
}


// Log is the API request & response pair being logged
message Log {
  LogIdentity identity = 1 [(validate.rules).message = {required: true}];
  LogRecord record = 2 [(validate.rules).message = {required: true}];
  LogMetadataSet request = 3;
  LogMetadataSet response = 4;
}

// LogRecordIdentity is the identity/source data associated with a request & response pair
message LogIdentity {
  string tenant = 2 [(validate.rules).string = {uuid: true, ignore_empty: true}];
  string key_id = 3 [(validate.rules).string = {uuid: true, ignore_empty: true}];
  // user_id's are UUIDs or auth0 user strings. If we want to validate: 
  // pattern: "^([0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}|auth0\|[0-9a-f]{24})$"
  string user_id = 4;
  string role_id = 5 [deprecated = true];
  string ip = 6 [(validate.rules).string = {ip: true, ignore_empty: true}];
}


// LogRecord is the request-response log of an API call
message LogRecord {
  string domain = 1;
  string path = 2;
  string method = 3;
  string url = 4 [(validate.rules).string = {uri: true, ignore_empty: true}];
  string request_id = 5 [(validate.rules).string = {uuid: true, ignore_empty: true}];
  int32 status = 6;
  google.protobuf.Timestamp start_time = 7;
  google.protobuf.Timestamp end_time = 8;
  google.protobuf.Duration duration = 9;
}

message LogMetadataSet {
  repeated LogMetadata headers = 1;
  repeated LogMetadata body = 2;
}

// LogRecordMetadata is arbitrary key-value pairs associated with the LogRecord
message LogMetadata {
  string key = 1;
  string value = 2;
}

message LogsFilter {
  repeated string domain = 1;
  repeated string path = 2;
  repeated string method = 3;
  repeated string ip = 5;
  repeated int32 status = 4;
  google.protobuf.Timestamp start_time = 6;
  google.protobuf.Timestamp end_time = 7;
  google.protobuf.Duration duration_from = 8;
  google.protobuf.Duration duration_to = 9;
}
